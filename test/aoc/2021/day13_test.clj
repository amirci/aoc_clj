(ns aoc.2021.day13-test
  (:require [aoc.2021.day13 :as sut]
            [clojure.string :as st]
            [clojure.test :as t :refer [deftest is]]))

(def input
  (-> "resources/2021/day13.txt"
      slurp
      st/split-lines))


(def sample
  ["6,10"
   "0,14"
   "9,10"
   "0,3"
   "10,4"
   "4,11"
   "6,0"
   "6,12"
   "4,1"
   "0,13"
   "10,12"
   "3,4"
   "3,0"
   "8,4"
   "1,10"
   "2,14"
   "8,10"
   "9,0"
   ""
   "fold along y=7"
   "fold along x=5"])


(deftest part-1
  (is (= 17 (sut/first-fold (sut/parse sample))))
  (is (= 618 (sut/first-fold (sut/parse input)))))


(defn ->points
  [pts]
  (->> pts
       (map (fn [[x y]] (format "(%d, %d)" x (* -1 y))))
       (st/join ", ")))


; part 2 "ALREKFKU"
; get the points with ->points
; use desmos.com to print the points

(->points
 (sut/fold-paper (sut/parse input)))


"(38, -3), (15, -4), (23, -5), (10, -5), (17, -5), (25, -1), (35, -2), (23, 0), (17, -2), (1, 0), (2, -3), (16, -5), (18, 0), (15, 0), (33, -5), (3, -3), (37, -5), (5, -4), (15, -3), (38, -2), (0, -5), (3, -4), (11, 0), (17, 0), (30, 0), (20, -5), (28, 0), (30, -1), (13, -2), (16, -2), (26, -2), (20, -3), (5, -3), (35, -3), (13, -1), (21, -2), (25, -5), (22, -1), (38, -1), (6, -5), (5, -2), (32, -4), (27, 0), (10, -2), (35, 0), (12, 0), (16, 0), (38, 0), (10, 0), (35, -1), (30, -2), (25, -3), (1, -3), (30, -4), (38, -4), (15, -1), (11, -3), (12, -4), (15, -5), (22, -3), (30, -5), (32, -1), (0, -3), (5, -1), (25, -4), (8, -5), (31, -2), (13, -5), (10, -1), (5, -5), (36, -5), (27, -2), (20, -1), (20, 0), (10, -4), (25, 0), (33, 0), (0, -2), (2, 0), (0, -4), (3, -1), (12, -3), (30, -3), (26, 0), (7, -5), (5, 0), (25, -2), (20, -2), (35, -4), (10, -3), (22, -4), (3, -5), (3, -2), (20, -4), (18, -5), (0, -1), (15, -2), (32, -3)"
