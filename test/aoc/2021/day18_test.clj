(ns aoc.2021.day18-test
  (:require [aoc.2021.day18 :as sut]
            [clojure.string :as st]
            [clojure.test :as t :refer [deftest is are]]))

(def input
  (->> "resources/2021/day18.txt"
       slurp
       st/split-lines
       (map read-string)))


(deftest magnitude-test
  (are [expected nbr] (= expected (sut/magnitude nbr))
    129 [[9,1],[1,9]]
    3488 [[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]
    4140 [[[[6,6],[7,6]],[[7,7],[7,0]]],[[[7,7],[7,7]],[[7,8],[9,9]]]]))


(deftest ->nbr-test
  (is (= {:scalars {[1] 10}
          :nbr [[6,[5,[4,[3,2]]]],10]
          :pairs #{[0 1 1 1]}}
         (sut/->nbr [[6,[5,[4,[3,2]]]],10]))))


(deftest exploding-test
  (are [expected nbr] (= [expected true] (sut/explode-lnp (sut/->nbr nbr)))
    {:nbr [[[[0,9],2],3],4]
     :scalars {}
     :pairs #{}} [[[[[9,8],1],2],3],4]
    {:nbr [7,[6,[5,[7,0]]]] :scalars {} :pairs #{}} [7,[6,[5,[4,[3,2]]]]]
    {:nbr [[6,[5,[7,0]]],3] :scalars {} :pairs #{}} [[6,[5,[4,[3,2]]]],1]
    {:nbr [[3,[2,[8,0]]],[9,[5,[4,[3,2]]]]]
     :scalars {}
     :pairs #{[1 1 1 1]}} [[3,[2,[1,[7,3]]]],[6,[5,[4,[3,2]]]]]
    {:nbr [[3,[2,[8,0]]],[9,[5,[7,0]]]]
     :scalars {}
     :pairs #{}} [[3,[2,[8,0]]],[9,[5,[4,[3,2]]]]]
    {:nbr [[[[0,7],4],[7,[[8,4],9]]],[1,1]]
     :scalars {}
     :pairs #{[0 1 1 0]}} [[[[[4,3],4],4],[7,[[8,4],9]]] [1,1]]
    {:nbr [[[[0,7],4],[15,[0,13]]],[1,1]]
     :scalars {[0 1 1 1] 13
               [0 1 0] 15}
     :pairs #{}} [[[[0,7],4],[7,[[8,4],9]]],[1,1]]))


(deftest sum-all-nbrs-test
  (are [expected nbrs] (= expected (sut/sum-all-nbrs nbrs))
    [[[[1,1],[2,2]],[3,3]],[4,4]] [[1,1] [2,2] [3,3] [4,4]]
    [[[[3,0],[5,3]],[4,4]],[5,5]] [[1,1] [2,2] [3,3] [4,4] [5 5]]
    [[[[5,0],[7,4]],[5,5]],[6,6]] [[1,1] [2,2] [3,3] [4,4] [5,5] [6,6]]

    [[[[4,0],[5,4]],[[7,7],[6,0]]],[[8,[7,7]],[[7,9],[5,0]]]]
    [[[[0,[4,5]],[0,0]],[[[4,5],[2,6]],[9,5]]] [7,[[[3,7],[4,3]],[[6,3],[8,8]]]]]

    [[[[6,7],[6,7]],[[7,7],[0,7]]],[[[8,7],[7,7]],[[8,8],[8,0]]]]
    [[[[[4,0],[5,4]],[[7,7],[6,0]]],[[8,[7,7]],[[7,9],[5,0]]]] [[2,[[0,8],[3,4]]],[[[6,7],1],[7,[1,6]]]]]

    [[[[7,0],[7,7]],[[7,7],[7,8]]],[[[7,7],[8,8]],[[7,7],[8,7]]]]
    [[[[[6,7],[6,7]],[[7,7],[0,7]]],[[[8,7],[7,7]],[[8,8],[8,0]]]] [[[[2,4],7],[6,[0,5]]],[[[6,8],[2,8]],[[2,1],[4,5]]]]]

    [[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,8],[0,8]],[[9,9],[9,0]]]]
    [[[[[7,0],[7,7]],[[7,7],[7,8]]],[[[7,7],[8,8]],[[7,7],[8,7]]]] [7,[5,[[3,8],[1,4]]]]]

    [[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]
    [[[[0,[4,5]],[0,0]],[[[4,5],[2,6]],[9,5]]]
     [7,[[[3,7],[4,3]],[[6,3],[8,8]]]]
     [[2,[[0,8],[3,4]]],[[[6,7],1],[7,[1,6]]]]
     [[[[2,4],7],[6,[0,5]]],[[[6,8],[2,8]],[[2,1],[4,5]]]]
     [7,[5,[[3,8],[1,4]]]]
     [[2,[2,2]],[8,[8,1]]]
     [2,9]
     [1,[[[9,3],9],[[9,0],[0,7]]]]
     [[[5,[7,4]],7],1]
     [[[[4,2],2],6],[8,7]]]

    [[[[6,6],[7,6]],[[7,7],[7,0]]],[[[7,7],[7,7]],[[7,8],[9,9]]]]
    [[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
     [[[5,[2,8]],4],[5,[[9,9],0]]]
     [6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
     [[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
     [[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
     [[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
     [[[[5,4],[7,7]],8],[[8,3],8]]
     [[9,3],[[9,9],[6,[4,9]]]]
     [[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
     [[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]]))


(deftest part-1
  (is (= 3486 (sut/magnitude (sut/sum-all-nbrs input)))))


(deftest part-2
  (is (= 3993 (sut/largest-sum
               [[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
                [[[5,[2,8]],4],[5,[[9,9],0]]]
                [6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
                [[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
                [[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
                [[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
                [[[[5,4],[7,7]],8],[[8,3],8]]
                [[9,3],[[9,9],[6,[4,9]]]]
                [[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
                [[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]])))
  (is (= 4747 (sut/largest-sum input))))

